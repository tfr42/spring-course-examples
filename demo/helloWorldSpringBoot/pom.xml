<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.4.RELEASE</version>
	</parent>
	<groupId>net.gfu.seminar.spring.demo</groupId>
	<artifactId>helloWorldSpringBoot</artifactId>
	<version>1.0.0-SNAPSHOT</version>
	<description>HelloWorld with SpringBoot - on Docker</description>
	<properties>
		<docker.image.prefix>tfr42</docker.image.prefix>
		<docker.image.name>hello-world-springboot</docker.image.name>
	</properties>
	<dependencies>
		<!-- Overview of Spring Boot Starter POM's
             http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#using-boot-starter-poms
             Endpoints
             http://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#production-ready-endpoints
		    -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-rest</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- http://docs.spring.io/spring-boot/docs/current/maven-plugin/ 
				 to start the application run the goal
				 mvn spring-boot:run
				-->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- https://github.com/spotify/docker-maven-plugin
			     to build and run the docker container use
			     mvn clean package docker:build
			    -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<imageName>${docker.image.prefix}/${docker.image.name}</imageName>
					<dockerDirectory>src/main/config/docker</dockerDirectory>
					<resources>
						<resource>
							<targetPath>/</targetPath>
							<directory>${project.build.directory}</directory>
							<include>${project.build.finalName}.jar</include>
						</resource>
					</resources>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<url>http://localhost:8080/</url>
</project>